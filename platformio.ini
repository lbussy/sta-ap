; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[PlatformIO]
description = This is a demo project for STA + AP Mode with a captive portal
; default_envs = d1_mini
; default_envs = lolin_d32

[common]
framework = arduino
upload_speed = 921600
monitor_filters =
build_flags =
extra_scripts =
lib_deps =
	https://github.com/lbussy/ESPAsyncWebServer.git
	https://github.com/lbussy/AsyncTCP.git
	https://github.com/thijse/Arduino-Log.git
build_type = debug

[esp32]
platform = espressif32
framework = ${common.framework}
upload_speed = ${common.upload_speed}
monitor_speed = 115200
monitor_filters =
	${common.monitor_filters}
	esp32_exception_decoder
build_flags =
	${common.build_flags}
	-D BAUD=${esp32.monitor_speed}
	-D CONFIG_ASYNC_TCP_RUNNING_CORE=1
	-D CONFIG_ASYNC_TCP_USE_WDT=1
extra_scripts = ${common.extra_scripts}
lib_deps = 
	${common.lib_deps}
	https://github.com/khoih-prog/AsyncTCP.git
build_type = ${common.build_type}
board_build.partitions = default.csv
board_build.filesystem = spiffs

[esp8266]
platform = espressif8266
framework = ${common.framework}
upload_speed = ${common.upload_speed}
monitor_speed = 74880
	${common.monitor_filters}
monitor_filters =
	${common.monitor_filters}
	esp8266_exception_decoder
build_flags =
	${common.build_flags}
	-D BAUD=${esp8266.monitor_speed}
extra_scripts = ${common.extra_scripts}
lib_deps = 
	${common.lib_deps}
	https://github.com/khoih-prog/ESPAsyncTCP.git
build_type = ${common.build_type}
board_build.filesystem = littlefs

[env:lolin_d32]
platform=${esp32.platform}
framework = ${esp32.framework}
board = lolin_d32
upload_speed = ${esp32.upload_speed}
monitor_speed = ${esp32.monitor_speed}
monitor_filters = ${esp32.monitor_filters}
build_flags = ${esp32.build_flags}
extra_scripts = ${esp32.extra_scripts}
lib_deps = ${esp32.lib_deps}
build_type = ${esp32.build_type}
board_build.partitions = ${esp32.board_build.partitions}
board_build.filesystem = ${esp32.board_build.filesystem}

[env:d1_mini]
platform = espressif8266
framework = ${esp8266.framework}
board = d1_mini
upload_speed = ${esp8266.upload_speed}
monitor_speed = ${esp8266.monitor_speed}
monitor_filters = ${esp8266.monitor_filters}
build_flags = ${esp8266.build_flags}
extra_scripts = ${esp8266.extra_scripts}
lib_deps = ${esp8266.lib_deps}
build_type = ${esp8266.build_type}
board_build.filesystem = ${esp8266.board_build.filesystem}
